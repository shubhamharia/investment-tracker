# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: portfolio_db
    environment:
      POSTGRES_DB: portfolio_db
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - portfolio_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: portfolio_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - portfolio_network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio_backend
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://portfolio_user:portfolio_pass@db:5432/portfolio_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-this
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - portfolio_network
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs

  # Celery Worker for Background Tasks
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio_celery
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://portfolio_user:portfolio_pass@db:5432/portfolio_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-this
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - portfolio_network
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: celery -A app.celery worker --loglevel=info

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio_beat
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://portfolio_user:portfolio_pass@db:5432/portfolio_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-this
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - portfolio_network
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: celery -A app.celery beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: portfolio_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - portfolio_network
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: portfolio_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - portfolio_network

volumes:
  postgres_data:
  redis_data:

networks:
  portfolio_network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up